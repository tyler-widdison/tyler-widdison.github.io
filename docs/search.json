[
  {
    "objectID": "posts/olympics_data_verse.html",
    "href": "posts/olympics_data_verse.html",
    "title": "OlympicsDataverse",
    "section": "",
    "text": "Inspiration coming from the https://github.com/sportsdataverse, I found there was no common place with Olympic data. After discovering some sports have public access to data I decided to start this organization with the intent of a data distribution knowledge base.\n\nSummer games\n\n\n\n\n\n\nSport\nSport (initial)\nBody\nSporting Body Webpage\nPackages or API\n\n\n\n\nArtistic Swimming\nSWA\nWAqua\nhttps://www.worldaquatics.com\nhttps://api.worldaquatics.com/fina/competitions/3085/events\n\n\nDiving\nDIV\nWAqua\nhttps://www.worldaquatics.com\nhttps://api.worldaquatics.com/fina/competitions/3085/events\n\n\nMarathon Swimming\nOWS\nWAqua\nhttps://www.worldaquatics.com\nhttps://api.worldaquatics.com/fina/competitions/3085/events\n\n\nSwimming\nSWM\nWAqua\nhttps://www.worldaquatics.com\nhttps://api.worldaquatics.com/fina/competitions/3085/events\n\n\nWater Polo\nWPO\nWAqua\nhttps://www.worldaquatics.com\nhttps://api.worldaquatics.com/fina/competitions/3085/events\n\n\n3x3 Basketball\nBK3\nFIBA\nhttps://www.fiba.basketball\nhttps://cm.fibaorganizer.com/static/docs/api/\n\n\nBasketball\nBKB\nFIBA\nhttps://www.fiba.basketball\nhttps://cm.fibaorganizer.com/static/docs/api/\n\n\nCanoe Sprint\nCSP\nICF\nhttps://www.canoeicf.com\nhttps://infoicf.msl.es/webICF/searcherOneSport?page=ZZS100R_@@@@@@@@@@@@@@@@@@@@@ENG\n\n\nCanoe Slalom\nCSL\nICF\nhttps://www.canoeicf.com\nhttps://infoicf.msl.es/webICF/searcherOneSport?page=ZZS100R_@@@@@@@@@@@@@@@@@@@@@ENG\n\n\nCycling BMX Freestyle\nBMF\nUCI\nhttps://www.uci.org\nhttps://www.uci.org/api/calendar/upcoming\n\n\nCycling BMX Racing\nBMX\nUCI\nhttps://www.uci.org\nhttps://www.uci.org/api/calendar/upcoming\n\n\nCycling Mountain Bike\nMTB\nUCI\nhttps://www.uci.org\nhttps://www.uci.org/api/calendar/upcoming\n\n\nCycling Road\nCRD\nUCI\nhttps://www.uci.org\nhttps://www.uci.org/api/calendar/upcoming\n\n\nCycling Track\nCTR\nUCI\nhttps://www.uci.org\nhttps://www.uci.org/api/calendar/upcoming\n\n\nArtistic Gymnastics\nGAR\nFIG\nhttps://www.gymnastics.sport\nhttps://www.gymnastics.sport/api/\n\n\nRhythmic Gymnastics\nGRY\nFIG\nhttps://www.gymnastics.sport\nhttps://www.gymnastics.sport/api/\n\n\nTrampoline Gymnastics\nGTR\nFIG\nhttps://www.gymnastics.sport\nhttps://www.gymnastics.sport/api/\n\n\nVolleyball - Beach\nVBV\nFIVB\nhttps://www.fivb.com\nhttps://www.fivb.org/VisSDK/VisWebService/#Introduction.html\n\n\nVolleyball - Indoor\nVVO\nFIVB\nhttps://www.fivb.com\nhttps://www.fivb.org/VisSDK/VisWebService/#Introduction.html\n\n\nEquestrian - Dressage\nEDR\nFEI\nhttps://www.fei.org\nhttps://inside.fei.org/fei/your-role/it-services/it-platforms/fei-database\n\n\nEquestrian - Eventing\nEVE\nFEI\nhttps://www.fei.org\nhttps://inside.fei.org/fei/your-role/it-services/it-platforms/fei-database\n\n\nEquestrian - Jumping\nEJP\nFEI\nhttps://www.fei.org\nhttps://inside.fei.org/fei/your-role/it-services/it-platforms/fei-database\n\n\nWrestling - Freestyle\nWRE\nUWW\nhttps://uww.org\nhttps://github.com/unitedworldwrestling\n\n\nWrestling - Greco-Roman\nWGR\nUWW\nhttps://uww.org\nhttps://github.com/unitedworldwrestling\n\n\nArchery\nARC\nWArch\nhttps://www.worldarchery.sport\nhttps://www.worldarchery.sport/api\n\n\nAthletics\nATH\nWAthle\nhttps://worldathletics.org\nNone found\n\n\nBadminton\nBDM\nBWF\nhttp://bwfbadminton.com\nhttps://extranet-lv.bwfbadminton.com/api\n\n\nBoxing\nBOX\nAIBA\nhttps://www.iba.sport\nNone found\n\n\nBreaking\nBKG\nWDSF\nhttps://www.worlddancesport.org\nhttps://services.worlddancesport.org/api/1\n\n\nFencing\nFEN\nFIE\nhttp://fie.org\nNone found\n\n\nField hockey\nHOC\nFIH\nhttps://www.fih.hockey\nNone found\n\n\nFootball\nFBL\nFIFA\nhttps://www.fifa.com\nhttps://futdb.app\n\n\nGolf\nGLF\nIGF\nhttps://www.igfgolf.org\nNone found\n\n\nHandball\nHBL\nIHF\nhttp://www.ihf.info\nNone found\n\n\nJudo\nJUD\nIJF\nhttps://www.ijf.org\nhttps://judobase.ijf.org/\n\n\nModern Pentathlon\nMPN\nUIPM\nhttps://www.uipmworld.org\nNone found\n\n\nRowing\nROW\nWRow\nhttps://worldrowing.com\nNone found\n\n\nRugby Sevens\nRU7\nWRug\nhttps://www.world.rugby\nhttps://github.com/pierre-lamarche/RugbyRanking\n\n\nSailing\nSAL\nWSail\nhttps://www.sailing.org/\nNone found\n\n\nShooting\nSHO\nISSF\nhttp://www.issf-sports.org/\nNone found\n\n\nSkateboarding\nSKB\nWSkate\nhttp://www.worldskate.org/\nNone found\n\n\nSport Climbing\nCLB\nIFSC\nhttp://www.ifsc-climbing.org/\nNone found\n\n\nSurfing\nSRF\nISA\nhttps://www.isasurf.org/\nNone found\n\n\nTable Tennis\nTTE\nITTF\nhttps://www.ittf.com/\nNone found\n\n\nTaekwondo\nTKW\nWT\nhttp://www.worldtaekwondo.org/\nNone found\n\n\nTennis\nTEN\nITF\nhttps://www.itftennis.com/en/\nNone found\n\n\nTriathlon\nTRI\nITU\nhttps://www.triathlon.org/\nhttps://github.com/tyler-widdison/rTriathlon\n\n\nTrampoline\nGTR\nFIG\nhttps://www.gymnastics.sport/site/\nNone found\n\n\nWeightlifting\nWLF\nIWF\nhttps://iwf.sport/\nNone found\n\n\n\n\n\n\n\n\n\nWinter games"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Tyler Widdison",
    "section": "Experience",
    "text": "Experience\nData Analyst (2022-present)\nFamilySearch\n\nPerformance Data Analyst (2019-2023)\nUSA Beach Volleyball Teams\n\nOperations Data Analyst (2013-2019)\nHudl/Volleymetrics"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Resources",
    "section": "",
    "text": "Awesome Quarto\nEpic resource for all things quarto.\nAwesome Quarto\n\n\n\nOpenvolley\nUseful R package when evaluating volleyball data.\nOpenvolley\n\n\n\nVolleyball data lab\nVideo series introducing the use of R with .dvw (volleyball scouted) files.\nVolleyball data lab"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "The journey of Emancipator\n\n\n\n\n\n\n\nMaps\n\n\nData gathering\n\n\n\n\n\n\n\n\n\n\n\nJul 22, 2023\n\n\n\n\n\n\n  \n\n\n\n\nSelect Health providers\n\n\n\n\n\n\n\nMaps\n\n\nData gathering\n\n\nInformational\n\n\n\n\nData gathering, wrangling, visualizing with health providers\n\n\n\n\n\n\nJun 22, 2023\n\n\n\n\n\n\n  \n\n\n\n\nOlympicsDataverse\n\n\n\n\n\n\n\nOlympics\n\n\nData gathering\n\n\n\n\nA place for all things data via Olympic Sports\n\n\n\n\n\n\nMay 24, 2023\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/concert_archives/emancipator.html",
    "href": "posts/concert_archives/emancipator.html",
    "title": "The journey of Emancipator",
    "section": "",
    "text": "Emancipator - Doug Appling along side Ilya Goldberg, described as a uplifting, mid-tempo, beat-centric, densely layered, melodica, electronica, a blend of music inspiring and creating a story with their captivating melodies and tunes. Doug also found record label Loci Records. This blog post explores the concerts of Emancipator, delving into some data to gain insights into their musical journey."
  },
  {
    "objectID": "posts/concert_archives/emancipator.html#which-state-has-emancipator-played-the-most",
    "href": "posts/concert_archives/emancipator.html#which-state-has-emancipator-played-the-most",
    "title": "The journey of Emancipator",
    "section": "Which state has Emancipator played the most?",
    "text": "Which state has Emancipator played the most?\n\n\nCode\ndat %&gt;% \n  separate(Location, c('City', 'State', 'Country'), \", \") %&gt;% \n  group_by(State) %&gt;% \n  count() %&gt;% \n  ungroup() %&gt;% \n  arrange(-n) %&gt;% \n  na.omit() %&gt;% \n  filter(n != 1) %&gt;% \n  ggplot(aes(reorder(State, n), n, label = n)) + \n  geom_col(fill = '#2c7bb6', width = 0.2) + \n  coord_flip() + \n  geom_point(color = '#2c7bb6', size = 5) +\n  silgelib::theme_roboto() + \n  labs(x = '',\n       y = 'Number of concerts played') + \n  geom_text(y = -2, size = 3.2)\n\n\n\n\n\n\nWhat is the number of concerts performed after the release of an album? And before the release of the next album.\nA ton of shows played before the release of Seven Seas. Right before and after starting Loci records.\n\n\nCode\ndat %&gt;%\n  group_by(recent_release) %&gt;% \n  count() %&gt;% \n  rename(`Concert count` = n,\n         Album = recent_release) %&gt;% \n  kableExtra::kable() %&gt;% \n  kableExtra::kable_paper(full_width = F) %&gt;% \n  kableExtra::scroll_box(height = \"300px\", width = '600px')\n\n\n\n\n\n\nAlbum\nConcert count\n\n\n\n\nSoon It Will Be Cold Enough\n11\n\n\nSafe in the Steep Cliffs\n171\n\n\nDusk to Dawn\n150\n\n\nSeven Seas\n95\n\n\nBaralku\n60\n\n\nMountin of Memory\n12\n\n\n11th Orbit\n19\n\n\n\n\n\n\n\n\n\nWhat was the busiest travel month?\nInsane! October 2015 there were 24 shows (in 31 days)! That is a lot of traveling. The release of Seven Seas happened in late Sept 2015. I wonder if the ensemble played during this time Doug and Ilya… That is a lot of equipment moving every day. You can explore the number of concerts played by date with the chart below.\n\n\nCode\ndat %&gt;%\n  group_by(Year, Month) %&gt;% \n  count() %&gt;% \n  ungroup() %&gt;% \n  rename(`Concert count` = n) %&gt;% \n  kableExtra::kable() %&gt;% \n  kableExtra::kable_paper(full_width = F) %&gt;% \n  kableExtra::scroll_box(height = \"300px\", width = '600px')\n\n\n\n\n\n\nYear\nMonth\nConcert count\n\n\n\n\n2009\n07\n1\n\n\n2009\n09\n6\n\n\n2009\n10\n2\n\n\n2009\n11\n2\n\n\n2010\n02\n10\n\n\n2010\n03\n5\n\n\n2010\n04\n5\n\n\n2010\n05\n1\n\n\n2010\n06\n2\n\n\n2010\n07\n4\n\n\n2010\n08\n5\n\n\n2010\n09\n8\n\n\n2010\n10\n12\n\n\n2010\n11\n6\n\n\n2010\n12\n1\n\n\n2011\n01\n6\n\n\n2011\n02\n13\n\n\n2011\n03\n1\n\n\n2011\n04\n1\n\n\n2011\n05\n2\n\n\n2011\n06\n5\n\n\n2011\n07\n2\n\n\n2011\n08\n4\n\n\n2011\n09\n3\n\n\n2011\n10\n1\n\n\n2011\n11\n6\n\n\n2011\n12\n2\n\n\n2012\n01\n9\n\n\n2012\n02\n14\n\n\n2012\n03\n8\n\n\n2012\n04\n2\n\n\n2012\n05\n2\n\n\n2012\n06\n1\n\n\n2012\n07\n3\n\n\n2012\n08\n3\n\n\n2012\n09\n6\n\n\n2012\n10\n1\n\n\n2012\n11\n4\n\n\n2012\n12\n2\n\n\n2013\n01\n14\n\n\n2013\n02\n14\n\n\n2013\n03\n15\n\n\n2013\n05\n2\n\n\n2013\n06\n1\n\n\n2013\n07\n6\n\n\n2013\n08\n4\n\n\n2013\n09\n3\n\n\n2013\n10\n1\n\n\n2013\n11\n3\n\n\n2013\n12\n2\n\n\n2014\n01\n16\n\n\n2014\n02\n18\n\n\n2014\n03\n6\n\n\n2014\n04\n5\n\n\n2014\n05\n5\n\n\n2014\n06\n4\n\n\n2014\n07\n1\n\n\n2014\n08\n5\n\n\n2014\n10\n12\n\n\n2014\n11\n5\n\n\n2014\n12\n1\n\n\n2015\n02\n5\n\n\n2015\n04\n2\n\n\n2015\n05\n1\n\n\n2015\n06\n3\n\n\n2015\n07\n1\n\n\n2015\n08\n2\n\n\n2015\n09\n6\n\n\n2015\n10\n24\n\n\n2015\n11\n11\n\n\n2015\n12\n2\n\n\n2016\n01\n4\n\n\n2016\n02\n14\n\n\n2016\n03\n5\n\n\n2016\n04\n2\n\n\n2016\n05\n4\n\n\n2016\n06\n2\n\n\n2016\n07\n2\n\n\n2016\n08\n2\n\n\n2016\n09\n2\n\n\n2016\n10\n2\n\n\n2016\n11\n2\n\n\n2016\n12\n6\n\n\n2017\n01\n2\n\n\n2017\n07\n1\n\n\n2017\n08\n4\n\n\n2017\n09\n2\n\n\n2018\n01\n2\n\n\n2018\n02\n18\n\n\n2018\n03\n7\n\n\n2018\n04\n1\n\n\n2018\n05\n2\n\n\n2018\n06\n3\n\n\n2018\n07\n1\n\n\n2018\n08\n2\n\n\n2018\n09\n1\n\n\n2018\n10\n4\n\n\n2019\n01\n4\n\n\n2019\n02\n1\n\n\n2019\n03\n3\n\n\n2019\n04\n6\n\n\n2019\n05\n1\n\n\n2019\n12\n1\n\n\n2020\n01\n2\n\n\n2020\n02\n1\n\n\n2020\n05\n1\n\n\n2020\n07\n1\n\n\n2021\n08\n2\n\n\n2021\n09\n1\n\n\n2021\n10\n1\n\n\n2022\n04\n1\n\n\n2022\n05\n1\n\n\n2022\n06\n1\n\n\n2022\n08\n2\n\n\n2022\n09\n2\n\n\n2022\n10\n1\n\n\n2022\n12\n8\n\n\n2023\n01\n1\n\n\n2023\n02\n1\n\n\n2023\n03\n2\n\n\n2023\n04\n1\n\n\n2023\n06\n1\n\n\n2023\n08\n3\n\n\n\n\n\n\n\n\n\nExploration chart for concerts played\nYou can visually see the amount of concerts played by Emancipator on this timeline. Right after Seven Seas came out they were on the road heavily in October.\n\n\nCode\nlibrary(dygraphs)\nlibrary(xts)\n\nxts &lt;- dat %&gt;% \n  select(Date, no, Location) %&gt;% \n  as.xts()\n\ndygraph(xts) %&gt;% \n    dyRangeSelector(dateWindow = c(\"2014-1-1\", \"2017-12-31\")) %&gt;% \n    dyEvent(\"2022-9-23\", '11th Orbit') %&gt;% \n    dyEvent(\"2020-4-3\", 'Mountain of Memory') %&gt;% \n    dyEvent(\"2017-11-17\", 'Baralku') %&gt;% \n    dyEvent(\"2015-9-25\", 'Seven Seas') %&gt;% \n    dyEvent(\"2013-1-29\", 'Dusk to Dawn') %&gt;% \n    dyEvent(\"2010-1-19\", 'Safe in the Steep Cliffs') %&gt;% \n    dyEvent('2006-1-19', 'Soon It Will Be Cold Enough')"
  },
  {
    "objectID": "posts/concert_archives/emancipator.html#what-was-the-travel-schedule-for-emancipator-in-2015-october",
    "href": "posts/concert_archives/emancipator.html#what-was-the-travel-schedule-for-emancipator-in-2015-october",
    "title": "The journey of Emancipator",
    "section": "What was the travel schedule for Emancipator in 2015 October?",
    "text": "What was the travel schedule for Emancipator in 2015 October?\n\n\nCode\nlibrary(maps)\nlibrary(sf)\nlibrary(\"rnaturalearth\")\nlibrary(\"rnaturalearthdata\")\n\nworld &lt;- ne_countries(scale = \"medium\", returnclass = \"sf\")\nstates &lt;- st_as_sf(map(\"state\", plot = FALSE, fill = TRUE))\n\ndd &lt;- dat %&gt;% filter(yr_mo == '201510') %&gt;% mutate(Day = lubridate::day(Date))\n\nggplot(states) + \n  geom_sf(fill = NA, color = 'darkgrey') + \n  geom_point(data = dd, aes(x = lon, y = lat, group = seq_along(Day)), color = 'black') + \n  coord_sf(xlim = c(-97, -67), ylim = c(47, 30), expand = FALSE) + \n  geom_path(data = dd, aes(x = lon, y = lat), color = 'red') + ggrepel::geom_text_repel(data = dd, aes(lon, lat, label = paste0('10-', Day))) + \n  theme_bw() + \n  labs(x = '', y = '', title = 'Emancipators travel October 2015')\n\n\n\n\n\nCode\nlibrary(gganimate)\ntr &lt;- ggplot(states) + \n  geom_sf(fill = NA, color = 'darkgrey') + \n  geom_point(data = dd, aes(x = lon, y = lat, group = seq_along(Day)), color = 'black') + \n  coord_sf(xlim = c(-97, -67), ylim = c(47, 30), expand = FALSE) + \n  geom_path(data = dd, aes(x = lon, y = lat), color = 'red') + \n  theme_bw() + \n  transition_reveal(along = Day) + \n  ggtitle(\"Date: 2015-10-{frame_along}\") + \n  labs(x = '', y = '')\n\nanimate(tr, nframes = 300)\n\n\n\n\n\n\nHow was the world travel in this data-set?\nSome shows in Europe and Australia. But I want to see the majority of the concerts so I will focus on the United States.\n\n\nCode\nggplot(data = world) + \n    theme_bw() + \n    geom_point(data = dat, aes(x = lon, y = lat), color = \"#007d3c\", size = 1.5, alpha = .8) + \n    geom_sf(data = world, fill = NA, color = 'darkgrey') + \n    coord_sf(xlim = c(-130, 180), ylim = c(80, -50), expand = FALSE) + \n    theme(axis.title.x = element_blank(),\n          axis.text.x = element_blank(),\n          axis.ticks.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.y = element_blank(),\n          axis.ticks.y = element_blank(),\n    ) \n\n\n\n\n\n\n\nWhere in the United States did Emancipator travel most?\n\n\nCode\nggplot(data = states) + \n    theme_bw() + \n    geom_density_2d(data = dat, aes(x = lon, y = lat), alpha = .5) +\n    geom_point(data = dat, aes(x = lon, y = lat), size = 1.5, alpha = .4) + \n    geom_sf(data = states, fill = NA) + \n    coord_sf(xlim = c(-125, -67), ylim = c(50, 25), expand = FALSE) + \n    theme(axis.title.x = element_blank(),\n          axis.text.x = element_blank(),\n          axis.ticks.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.y = element_blank(),\n          axis.ticks.y = element_blank(),\n    ) +\n    guides(fill = \"none\") + \n    labs(title = 'Emancipators travels 2009-2023')\n\n\n\n\n\n\n\nHow about after album releases?\n\n\nCode\nggplot(data = states) + \n    theme_bw() + \n    geom_density_2d(data = dat, aes(x = lon, y = lat), alpha = .5) +\n    geom_point(data = dat, aes(x = lon, y = lat, color = recent_release), size = 1.5) + \n    geom_sf(data = states, fill = NA) + \n    coord_sf(xlim = c(-125, -67), ylim = c(50, 25), expand = FALSE) + \n    theme(axis.title.x = element_blank(),\n          axis.text.x = element_blank(),\n          axis.ticks.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.y = element_blank(),\n          axis.ticks.y = element_blank(),\n          ) +\n    labs(title = 'Concerts by album releases') + \n    facet_wrap(~recent_release)   + \n    guides(fill = \"none\", color = 'none')\n\n\n\n\n\n\n\n\nMountain of Memory was released right as lock-downs started. The entire tour, from what it seems, was canceled. From 2020 April - May and July west coast. Sept - Oct on the east coast. March 17th, the concerts were supposed to happened as planned, March 24th the concerts were rescheduled, then at the end of April the rest of the tour was then canceled. One show occurred in Oregon, July 2020.\n\n\nCode\ndat %&gt;% \n  group_by(Year) %&gt;% \n  count(name = 'Concert count') %&gt;% \n  kableExtra::kable() %&gt;% \n  kableExtra::kable_paper(full_width = F) %&gt;% \n  kableExtra::scroll_box(height = \"300px\", width = '600px')\n\n\n\n\n\n\nYear\nConcert count\n\n\n\n\n2009\n11\n\n\n2010\n59\n\n\n2011\n46\n\n\n2012\n55\n\n\n2013\n65\n\n\n2014\n78\n\n\n2015\n57\n\n\n2016\n47\n\n\n2017\n9\n\n\n2018\n41\n\n\n2019\n16\n\n\n2020\n5\n\n\n2021\n4\n\n\n2022\n16\n\n\n2023\n9\n\n\n\n\n\n\n\n\nThat is it for this post, some visuals on a musical artists travels! Enjoy this awesome Red Rocks Amphitheater video."
  },
  {
    "objectID": "posts/select health/select_health.html",
    "href": "posts/select health/select_health.html",
    "title": "Select Health providers",
    "section": "",
    "text": "SelectHealth offers medical and dental insurance plans in Utah, Idaho, and Nevada. This post’s goal is to build a interactive tool which can identify providers in a map using their machine readable data!\nData is gathered from https://selecthealth.org/machine-readable-data. Only gathering the ‘Providers’ data for this post. https://ebu.intermountainhealthcare.org/shprovider/exchange.providers.json.\n\n\n\nCode\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(readr)\nlibrary(jsonlite)\nlibrary(DT)\nlibrary(shiny)\nlibrary(shinyWidgets)\nlibrary(purrr)\nlibrary(leaflet)\n\n# Load data\n#provider &lt;- jsonlite::fromJSON(\"https://ebu.intermountainhealthcare.org/shprovider/exchange.providers.json\")\n\nload(here::here(file = 'posts/select health/provider.rda'))\n\n# Wrangle data\ndata &lt;- provider %&gt;% \n    dplyr::mutate(addresses = purrr::map(addresses, as.data.frame),\n                  facility_type = purrr::map_chr(facility_type, ~ ifelse(length(.x) &gt; 0, purrr::pluck(.x, 1), NA)),\n                  plans = purrr::map(plans, as.data.frame),\n                  first_name = name$first,\n                  last_name = name$last\n    ) %&gt;% \n    tidyr::unnest(addresses, keep_empty = T) %&gt;% \n    tidyr::unnest(languages, keep_empty = T) %&gt;% \n    tidyr::unnest(specialty, keep_empty = T) %&gt;% \n    tidyr::unnest(plans, keep_empty = T) %&gt;% \n    tidyr::unnest(years, keep_empty = T) %&gt;% \n    dplyr::mutate(addresses = stringr::str_replace_all(address, \"&\", \",\"),\n                  addy = paste0(addresses, \", \", city, \", \", state)\n    )\n\n\n\nAfter reading the data the next step is to gather the longitude and latitude for map usage. I use the ggmap package. (geocoded_data was ran previously and takes a while to run)\n**NOTE:** ggmap requires some work in Google and registering your api. I will not go over that portion of this process. I originally attempted to use tidygeocoder, but found there is a HIPAA situation which prevented me from getting the correct longitude and latitude for specific facilities. I found using ggmap did not give me this error.\n\n\n\nCode\n# Get geocoordinates\n#addys &lt;- data %&gt;% \n#  dplyr::distinct(addy)\n\n# Obtain coordinates using ggmap\n#geocoded_data &lt;- addys %&gt;%\n#  ggmap::mutate_geocode(addy)\n#readr::write_csv(geocoded_data, \"geocoded_data.csv\")\nload(here::here(file = 'posts/select health/geocoded_data.rda'))\n\n\n\nThen some additional data wrangling after obtaining all geocodes.\n\n\n\nCode\n# Join the coord with the providers data and wrangle furthur\ndf &lt;- data %&gt;% \n  dplyr::left_join(geocoded_data) %&gt;% \n  dplyr::filter(!grepl(\"^\\\\(\", addy)) %&gt;% \n  dplyr::distinct(facility_name, facility_type, type, addy, lon, lat, group_name, languages, gender, first_name, last_name, specialty, network_tier)\n\ngroup_data &lt;- df %&gt;% \n  dplyr::filter(type == 'GROUP') %&gt;% \n  janitor::remove_empty('cols') %&gt;% \n  dplyr::mutate(notes = paste0(group_name)) %&gt;% \n  dplyr::distinct(type, addy, lon, lat, group_name, notes)\n\nindiv_data &lt;- df %&gt;% \n  dplyr::filter(type == 'INDIVIDUAL') %&gt;% \n  janitor::remove_empty('cols') %&gt;% \n  dplyr::mutate(name = paste0(first_name, ' ', last_name),\n                notes = paste0(gender, \" - \", name, \" - \", languages, \" - \", specialty)) %&gt;% \n  dplyr::distinct(type, addy, lon, lat, languages, gender, name, specialty, notes)\n\nfacility_data &lt;- df %&gt;% \n  dplyr::filter(type == 'FACILITY') %&gt;% \n  janitor::remove_empty('cols') %&gt;% \n  dplyr::mutate(notes = paste0(facility_name)) %&gt;% \n  dplyr::distinct(facility_name, facility_type, type, addy, lon, lat, notes)\n\n\n\n\nAll types\nNow lets do some mapping!\n\n\n\nCode\n# map!\nleaflet() %&gt;%\n  leaflet::setView(lng = -111.349309, lat = 41.648323, zoom = 4) %&gt;% \n  leaflet::addTiles() %&gt;% \n  leaflet::addCircleMarkers(popup = group_data$notes, clusterOptions = leaflet::markerClusterOptions(), lng = group_data$lon, lat = group_data$lat, group = \"Group\", color = \"red\") %&gt;%\n  leaflet::addCircleMarkers(popup = facility_data$notes, clusterOptions = leaflet::markerClusterOptions(), lng = facility_data$lon, lat = facility_data$lat, group = \"Facility\", color = \"#F1CC6E\") %&gt;%\n  leaflet::addCircleMarkers(popup = indiv_data$notes, clusterOptions = leaflet::markerClusterOptions(), lng = indiv_data$lon, lat = indiv_data$lat, group = \"Individual\", color = \"#66B0B1\") %&gt;%\n  leaflet::addLegend(values = 'Group', group = \"Group\", position = \"bottomleft\", labels = \"Group\", colors = \"red\") %&gt;%\n  leaflet::addLegend(values = 'Facility', group = \"Facility\", position = \"bottomleft\", labels = \"Facility\", colors = \"#F1CC6E\") %&gt;%\n  leaflet::addLegend(values = 'Individual', group = \"Individual\", position = \"bottomleft\", labels = \"Individual\", colors = \"#66B0B1\") %&gt;%\n  leaflet::addLayersControl(overlayGroups = c(\"Group\", \"Facility\", 'Individual'),\n                   options = leaflet::layersControlOptions(collapsed = FALSE)) \n\n\n\n\n\n\n\n\nThis is a relatively simple example of how to gather and visualize public data.\n\n\n\nIndividual providers map exploration\nAdditionally, using shiny we can go further with individual providers, identifying specific providers locations by gender, language and specialty.\n\n\n\n\n\n\n\nShiny Code\n\n\n\n\n\n# load libraries ----\nlibrary(shiny)\nlibrary(shinyWidgets)\nlibrary(dplyr)\nlibrary(jsonlite)\nlibrary(DT)\nlibrary(leaflet)\n\n# functions for map ----\nviz_map &lt;- function(df, threshold = NULL) {\n\n  leaflet::leaflet() %&gt;%\n    leaflet::setView(lng = -111.349309, lat = 41.648323, zoom = 4) %&gt;%\n    leaflet::addTiles() %&gt;%\n    leaflet::addCircleMarkers(popup = df$notes,\n                              clusterOptions = leaflet::markerClusterOptions(),\n                              lng = df$lon,\n                              lat = df$lat,\n                              color = \"red\")\n}\n\n# load data ----\nload(file = 'provider.rda')\nload(file = 'geocoded_data.rda')\n\n# data prep ----\ndata &lt;- provider %&gt;%\n  dplyr::filter(type == 'INDIVIDUAL') %&gt;%\n  dplyr::mutate(addresses = purrr::map(addresses, as.data.frame),\n                name = paste0(name$first, ' ', name$last)\n                ) %&gt;%\n  tidyr::unnest(addresses, keep_empty = T) %&gt;%\n  tidyr::unnest(languages, keep_empty = T) %&gt;%\n  tidyr::unnest(specialty, keep_empty = T) %&gt;%\n  dplyr::mutate(addresses = stringr::str_replace_all(address, \"&\", \",\"),\n                addy = paste0(addresses, \", \", city, \", \", state),\n                notes = paste0(gender, \" - \", name, \" - \", languages, \" - \", specialty)\n                ) %&gt;%\n  dplyr::left_join(geocoded_data) %&gt;%\n  dplyr::distinct(type, addy, lon, lat, languages, gender, name, specialty, notes)\n\n# shiny application ----\nui &lt;- fluidPage(\n\n  titlePanel(\"Select Health Individual providers map\"),\n  # Inputs\n  column(2,\n         fluidRow(selectInput(inputId = \"gender\", label = \"Gender\", choices = c('Female', 'Male'), selected = 'Female')),\n         fluidRow(pickerInput(inputId = 'language', label = \"Language\", choices = NULL, selected = NULL, multiple = T, options = list(`actions-box` = TRUE))),\n         fluidRow(pickerInput(inputId = 'specialty', label = \"Specialty\", choices = NULL, selected = NULL, multiple = T, options = list(`actions-box` = TRUE)))\n         ),\n  # Plot/Table\n  mainPanel(\n    column(12, leafletOutput('map')),\n    column(12, DT::dataTableOutput('table'))\n    ))\n\nserver &lt;- function(input, output, session) {\n\n  current_language &lt;- reactiveVal()\n  observe({current_language(input$language)})\n\n  current_specialty &lt;- reactiveVal()\n  observe({current_specialty(input$specialty)})\n\n  observeEvent(input$gender,{\n    updatePickerInput(session, 'language', selected = current_language(), choices = unique(sort(data$languages[data$gender == input$gender])))\n    })\n\n  observeEvent(input$language,{\n    updatePickerInput(session, 'specialty', selected = current_specialty(), choices = unique(sort(data$specialty[data$gender == input$gender & data$languages %in% input$language])))\n  })\n\n  # Map\n  output$map &lt;- renderLeaflet({\n    map &lt;- data %&gt;%\n      filter(gender == input$gender & languages %in% input$language & specialty %in% input$specialty)\n    viz_map(map)\n    })\n\n  # Table\n  output$table &lt;- DT::renderDataTable({\n    DT::datatable(\n      data %&gt;%\n        filter(gender == input$gender & languages %in% input$language & specialty %in% input$specialty) %&gt;%\n        distinct(name, addy, specialty, languages),\n      colnames = c('Name', 'Address', 'Specialty', 'Language'),\n      rownames = FALSE,\n      extensions = 'Buttons',\n      class = 'display nowrap compact cell-border',\n      filter = 'top',\n      options = list(\n        scrollX = TRUE,\n        scrollY = \"300px\",\n        dom = 'tB',\n        buttons = c('copy', 'csv'),\n        paging = FALSE,\n        fixedHeader = TRUE)\n      )\n    })\n  }\n\nshinyApp(ui, server)\n\n\n\n\n \n\n\n\nAdditional data\nThis is a great resource for additional provider data outside of the select health network:\nhttps://github.com/bayesimpact/encompass/blob/a4f47e384ef4fe4dc43c30423a1713c2c93dc87f/data/healthcare_gov/Machine_Readable_URL_PUF.csv#L272"
  }
]